# Default values for wallabag.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: wallabag/wallabag
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "wallabag"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  # Defines an `Ingress.spec.ingressClassName`. Consider using it, as the annotation usage is considered deprecated.
  # className: ''
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: your-wallabag-url-instance.com
      paths: []
  tls: []
  #  - secretName: your-wallabag-url-instance-com-tls
  #    hosts:
  #      - your-wallabag-url-instance.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

wallabag:
  database:
    builtIn:
      postgresql:
        enabled: false
      mariadb:
        enabled: false
      sqlite:
        enabled: false
    # env:
      # charset: "utf-8"
      # driver: "pdo_sqlite"
      # host: "127.0.0.1"
      # name: symfony
      # password: "~"
      # port: ""
      # user: root
    populate: True
  fosuser:
    confirmation: true
    registration: true
  # mailer:
    # host: 127.0.0.1
    # password: "~"
    # user: "~"
  # redis:
      # host: "redis"
      # password: "~"
      # path: "~"
      # port: "6379"
      # scheme: "tcp"
  twofactor:
    auth: "true"
    # sender: "no-reply@wallabag.org"
  # domain_name: https://your-wallabag-url-instance.com
  # from_email: "wallabag@example.com"
  # locale: "en"
  # mysql_root_password: "wallabag-rootpass"
  # postgresql_admin_password: "wallabag-rootpass"
  # postgresql_admin_user: "wallabag-root"
  # secret: "ovmpmAWXRCabNlMgzlzFXDYmCFfzGv"
  # sentry_dsn: "~"
  # server_name: "Your wallabag instance"

sqlite:
  persistence:
    enabled: false
    size: 3Gi
    accessMode: ReadWriteOnce
    storageClass: default
    # existingClaim: ""

# postgresql:
  # global:
    # postgresql:
      # postgresqlDatabase: wallabag
      # postgresqlUsername: wallabag
      # postgresqlPassword: wallabag
      #servicePort: 5432
  # persistence:
    # size: 5Gi

# mariadb:
  # auth:
    # rootPassword: wallabag
  # primary:
    # service:
      # port: 3306
    # persistence:
      # size: 5Gi

livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
startupProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30
  successThreshold: 1
